************* Module droneAPIUtils
droneAPIUtils.py:98: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:132: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:136: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:144: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:146: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:160: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:204: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:206: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:210: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:236: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:250: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:353: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:361: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:381: [C0325(superfluous-parens), ] Unnecessary parens after 'not' keyword
droneAPIUtils.py:414: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:450: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:459: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:503: [C0325(superfluous-parens), ] Unnecessary parens after 'if' keyword
droneAPIUtils.py:20: [C0103(invalid-name), initaliseLogger] Invalid function name "initaliseLogger"
droneAPIUtils.py:20: [C0111(missing-docstring), initaliseLogger] Missing function docstring
droneAPIUtils.py:21: [W0601(global-variable-undefined), initaliseLogger] Global variable 'my_logger' undefined at the module level
droneAPIUtils.py:21: [C0103(invalid-name), initaliseLogger] Invalid constant name "my_logger"
droneAPIUtils.py:25: [C0103(invalid-name), initaliseLogger] Invalid variable name "LOG_FILENAME"
droneAPIUtils.py:48: [C0103(invalid-name), initaliseGlobals] Invalid function name "initaliseGlobals"
droneAPIUtils.py:48: [C0111(missing-docstring), initaliseGlobals] Missing function docstring
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'homeDomain' undefined at the module level
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'dronesimImage' undefined at the module level
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'defaultDockerHost' undefined at the module level
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'connectionDict' undefined at the module level
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'connectionNameTypeDict' undefined at the module level
droneAPIUtils.py:49: [W0601(global-variable-undefined), initaliseGlobals] Global variable 'authorizedZoneDict' undefined at the module level
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "homeDomain"
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "dronesimImage"
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "defaultDockerHost"
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "connectionDict"
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "connectionNameTypeDict"
droneAPIUtils.py:49: [C0103(invalid-name), initaliseGlobals] Invalid constant name "authorizedZoneDict"
droneAPIUtils.py:64: [C0103(invalid-name), initiliseRedisDB] Invalid function name "initiliseRedisDB"
droneAPIUtils.py:64: [C0111(missing-docstring), initiliseRedisDB] Missing function docstring
droneAPIUtils.py:66: [W0601(global-variable-undefined), initiliseRedisDB] Global variable 'redisdB' undefined at the module level
droneAPIUtils.py:66: [C0103(invalid-name), initiliseRedisDB] Invalid constant name "redisdB"
droneAPIUtils.py:72: [C0103(invalid-name), getEnvironmentVariable] Invalid function name "getEnvironmentVariable"
droneAPIUtils.py:72: [C0103(invalid-name), getEnvironmentVariable] Invalid argument name "inVariable"
droneAPIUtils.py:72: [C0111(missing-docstring), getEnvironmentVariable] Missing function docstring
droneAPIUtils.py:77: [W0703(broad-except), getEnvironmentVariable] Catching too general exception Exception
droneAPIUtils.py:74: [C0103(invalid-name), getEnvironmentVariable] Invalid variable name "envVariable"
droneAPIUtils.py:77: [C0103(invalid-name), getEnvironmentVariable] Invalid variable name "e"
droneAPIUtils.py:80: [C0103(invalid-name), getEnvironmentVariable] Invalid variable name "tracebackStr"
droneAPIUtils.py:81: [C0103(invalid-name), getEnvironmentVariable] Invalid variable name "traceLines"
droneAPIUtils.py:86: [C0103(invalid-name), validateAndRefreshContainers] Invalid function name "validateAndRefreshContainers"
droneAPIUtils.py:86: [C0111(missing-docstring), validateAndRefreshContainers] Missing function docstring
droneAPIUtils.py:86: [R0914(too-many-locals), validateAndRefreshContainers] Too many local variables (24/15)
droneAPIUtils.py:175: [W0703(broad-except), validateAndRefreshContainers] Catching too general exception Exception
droneAPIUtils.py:92: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "dockerHostsArray"
droneAPIUtils.py:118: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "vehicleName"
droneAPIUtils.py:121: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "droneId"
droneAPIUtils.py:122: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "hostIp"
droneAPIUtils.py:128: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "dockerClient"
droneAPIUtils.py:129: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "dockerAPIClient"
droneAPIUtils.py:130: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "containerFound"
droneAPIUtils.py:133: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "containerFound"
droneAPIUtils.py:136: [C0121(singleton-comparison), validateAndRefreshContainers] Comparison to False should be 'not expr' or 'expr is False'
droneAPIUtils.py:140: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "containerWithPort"
droneAPIUtils.py:143: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "contPortObj"
droneAPIUtils.py:149: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "containerWithPort"
droneAPIUtils.py:87: [R0101(too-many-nested-blocks), validateAndRefreshContainers] Too many nested blocks (6/5)
droneAPIUtils.py:160: [C0121(singleton-comparison), validateAndRefreshContainers] Comparison to False should be 'not expr' or 'expr is False'
droneAPIUtils.py:175: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "e"
droneAPIUtils.py:178: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "tracebackStr"
droneAPIUtils.py:179: [C0103(invalid-name), validateAndRefreshContainers] Invalid variable name "traceLines"
droneAPIUtils.py:92: [W0612(unused-variable), validateAndRefreshContainers] Unused variable 'dockerHostsArray'
droneAPIUtils.py:179: [W0612(unused-variable), validateAndRefreshContainers] Unused variable 'traceLines'
droneAPIUtils.py:86: [R0915(too-many-statements), validateAndRefreshContainers] Too many statements (56/50)
droneAPIUtils.py:184: [C0103(invalid-name), startBackgroundWorker] Invalid function name "startBackgroundWorker"
droneAPIUtils.py:184: [C0111(missing-docstring), startBackgroundWorker] Missing function docstring
droneAPIUtils.py:189: [C0103(invalid-name), rebuildDockerHostsArray] Invalid function name "rebuildDockerHostsArray"
droneAPIUtils.py:189: [C0111(missing-docstring), rebuildDockerHostsArray] Missing function docstring
droneAPIUtils.py:191: [C0103(invalid-name), rebuildDockerHostsArray] Invalid variable name "dockerHostsArray"
droneAPIUtils.py:199: [C0103(invalid-name), rebuildDockerHostsArray] Invalid variable name "hostIp"
droneAPIUtils.py:206: [C0121(singleton-comparison), rebuildDockerHostsArray] Comparison to False should be 'not expr' or 'expr is False'
droneAPIUtils.py:217: [C0103(invalid-name), applyHeadders] Invalid function name "applyHeadders"
droneAPIUtils.py:217: [C0111(missing-docstring), applyHeadders] Missing function docstring
droneAPIUtils.py:227: [C0103(invalid-name), connectVehicle] Invalid function name "connectVehicle"
droneAPIUtils.py:227: [C0103(invalid-name), connectVehicle] Invalid argument name "inVehicleId"
droneAPIUtils.py:227: [C0111(missing-docstring), connectVehicle] Missing function docstring
droneAPIUtils.py:229: [W0602(global-variable-not-assigned), connectVehicle] Using global for 'redisdB' but no assignment is done
droneAPIUtils.py:229: [W0601(global-variable-undefined), connectVehicle] Global variable 'redisdB' undefined at the module level
droneAPIUtils.py:229: [C0103(invalid-name), connectVehicle] Invalid constant name "redisdB"
droneAPIUtils.py:230: [W0602(global-variable-not-assigned), connectVehicle] Using global for 'connectionDict' but no assignment is done
droneAPIUtils.py:230: [W0601(global-variable-undefined), connectVehicle] Global variable 'connectionDict' undefined at the module level
droneAPIUtils.py:230: [C0103(invalid-name), connectVehicle] Invalid constant name "connectionDict"
droneAPIUtils.py:244: [C0103(invalid-name), connectVehicle] Invalid variable name "vehicleName"
droneAPIUtils.py:247: [C0103(invalid-name), connectVehicle] Invalid variable name "currentTime"
droneAPIUtils.py:248: [C0103(invalid-name), connectVehicle] Invalid variable name "timeSinceStart"
droneAPIUtils.py:257: [W1201(logging-not-lazy), connectVehicle] Specify string format arguments as logging function parameters
droneAPIUtils.py:258: [W1201(logging-not-lazy), connectVehicle] Specify string format arguments as logging function parameters
droneAPIUtils.py:263: [C0103(invalid-name), connectVehicle] Invalid variable name "w"
droneAPIUtils.py:266: [C0103(invalid-name), connectVehicle] Invalid variable name "e"
droneAPIUtils.py:270: [C0103(invalid-name), connectVehicle] Invalid variable name "tracebackStr"
droneAPIUtils.py:271: [C0103(invalid-name), connectVehicle] Invalid variable name "traceLines"
droneAPIUtils.py:271: [W0612(unused-variable), connectVehicle] Unused variable 'traceLines'
droneAPIUtils.py:276: [C0103(invalid-name), latLonAltObj] Invalid function name "latLonAltObj"
droneAPIUtils.py:276: [C0103(invalid-name), latLonAltObj] Invalid argument name "inObj"
droneAPIUtils.py:276: [C0111(missing-docstring), latLonAltObj] Missing function docstring
droneAPIUtils.py:284: [C0103(invalid-name), distanceInMeters] Invalid function name "distanceInMeters"
droneAPIUtils.py:284: [C0111(missing-docstring), distanceInMeters] Missing function docstring
droneAPIUtils.py:286: [C0103(invalid-name), distanceInMeters] Invalid variable name "R"
droneAPIUtils.py:293: [C0103(invalid-name), distanceInMeters] Invalid variable name "a"
droneAPIUtils.py:294: [C0103(invalid-name), distanceInMeters] Invalid variable name "c"
droneAPIUtils.py:299: [C0103(invalid-name), getVehicleStatus] Invalid function name "getVehicleStatus"
droneAPIUtils.py:299: [C0103(invalid-name), getVehicleStatus] Invalid argument name "inVehicle"
droneAPIUtils.py:299: [C0103(invalid-name), getVehicleStatus] Invalid argument name "inVehicleId"
droneAPIUtils.py:299: [C0111(missing-docstring), getVehicleStatus] Missing function docstring
droneAPIUtils.py:301: [C0103(invalid-name), getVehicleStatus] Invalid variable name "outputObj"
droneAPIUtils.py:363: [W1201(logging-not-lazy), getVehicleStatus] Specify string format arguments as logging function parameters
droneAPIUtils.py:299: [R0915(too-many-statements), getVehicleStatus] Too many statements (53/50)
droneAPIUtils.py:370: [C0103(invalid-name), getNexthostAndPort] Invalid function name "getNexthostAndPort"
droneAPIUtils.py:370: [C0111(missing-docstring), getNexthostAndPort] Missing function docstring
droneAPIUtils.py:371: [C0103(invalid-name), getNexthostAndPort] Invalid variable name "firstFreePort"
droneAPIUtils.py:373: [C0103(invalid-name), getNexthostAndPort] Invalid variable name "dockerHostsArray"
droneAPIUtils.py:380: [C0103(invalid-name), getNexthostAndPort] Invalid variable name "portList"
droneAPIUtils.py:381: [C0113(unneeded-not), getNexthostAndPort] Consider changing "not i in portList" to "i not in portList"
droneAPIUtils.py:382: [C0103(invalid-name), getNexthostAndPort] Invalid variable name "firstFreePort"
droneAPIUtils.py:384: [W0631(undefined-loop-variable), getNexthostAndPort] Using possibly undefined loop variable 'i'
droneAPIUtils.py:391: [C0103(invalid-name), createDrone] Invalid function name "createDrone"
droneAPIUtils.py:391: [C0103(invalid-name), createDrone] Invalid argument name "droneType"
droneAPIUtils.py:391: [C0103(invalid-name), createDrone] Invalid argument name "vehicleName"
droneAPIUtils.py:391: [C0111(missing-docstring), createDrone] Missing function docstring
droneAPIUtils.py:391: [R0913(too-many-arguments), createDrone] Too many arguments (6/5)
droneAPIUtils.py:391: [R0914(too-many-locals), createDrone] Too many local variables (17/15)
droneAPIUtils.py:394: [C0103(invalid-name), createDrone] Invalid variable name "uuidVal"
droneAPIUtils.py:397: [C0103(invalid-name), createDrone] Invalid variable name "environmentString"
droneAPIUtils.py:406: [C0103(invalid-name), createDrone] Invalid variable name "hostAndPort"
droneAPIUtils.py:407: [C0103(invalid-name), createDrone] Invalid variable name "dockerClient"
droneAPIUtils.py:412: [C0103(invalid-name), createDrone] Invalid variable name "dockerContainer"
droneAPIUtils.py:413: [C0103(invalid-name), createDrone] Invalid variable name "containerName"
droneAPIUtils.py:415: [C0103(invalid-name), createDrone] Invalid variable name "containerName"
droneAPIUtils.py:416: [C0103(invalid-name), createDrone] Invalid variable name "dockerContainer"
droneAPIUtils.py:424: [C0103(invalid-name), createDrone] Invalid variable name "containerName"
droneAPIUtils.py:425: [C0103(invalid-name), createDrone] Invalid variable name "dockerContainer"
droneAPIUtils.py:442: [C0103(invalid-name), createDrone] Invalid variable name "droneDBDetails"
droneAPIUtils.py:457: [C0103(invalid-name), createDrone] Invalid variable name "outputObj"
droneAPIUtils.py:467: [C0103(invalid-name), worker] Invalid class name "worker"
droneAPIUtils.py:505: [W0703(broad-except), worker.run] Catching too general exception Exception
droneAPIUtils.py:473: [C0103(invalid-name), worker.run] Invalid variable name "x"
droneAPIUtils.py:475: [C0103(invalid-name), worker.run] Invalid variable name "x"
droneAPIUtils.py:495: [W0703(broad-except), worker.run] Catching too general exception Exception
droneAPIUtils.py:498: [C0103(invalid-name), worker.run] Invalid variable name "tracebackStr"
droneAPIUtils.py:499: [C0103(invalid-name), worker.run] Invalid variable name "traceLines"
droneAPIUtils.py:508: [C0103(invalid-name), worker.run] Invalid variable name "tracebackStr"
droneAPIUtils.py:509: [C0103(invalid-name), worker.run] Invalid variable name "traceLines"
droneAPIUtils.py:499: [W0612(unused-variable), worker.run] Unused variable 'traceLines'
droneAPIUtils.py:6: [C0411(wrong-import-order), ] standard import "import logging" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:8: [C0411(wrong-import-order), ] standard import "import traceback" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:9: [C0411(wrong-import-order), ] standard import "import json" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:10: [C0411(wrong-import-order), ] standard import "import time" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:11: [C0411(wrong-import-order), ] standard import "import math" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:12: [C0411(wrong-import-order), ] standard import "import os" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:13: [C0411(wrong-import-order), ] standard import "import uuid" comes before "from dronekit import connect, APIException"
droneAPIUtils.py:16: [C0411(wrong-import-order), ] standard import "from threading import Thread" comes before "from dronekit import connect, APIException"
