steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull',  'eu.gcr.io/$PROJECT_ID/droneapiserver:latest']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'eu.gcr.io/$PROJECT_ID/droneapiserver:$SHORT_SHA','--cache-from','eu.gcr.io/$PROJECT_ID/droneapiserver:latest', '.']
  dir: 'APIServer'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'eu.gcr.io/$PROJECT_ID/droneapiserver:$SHORT_SHA']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'eu.gcr.io/$PROJECT_ID/droneapiserver:$SHORT_SHA', 'eu.gcr.io/$PROJECT_ID/droneapiserver:latest']  
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'eu.gcr.io/$PROJECT_ID/droneapiserver:latest']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', 'cluster-1', '--zone','europe-west3-b', '--project', 'lunar-standard-157209' ]
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/droneapiserver', 'droneapiserver=eu.gcr.io/lunar-standard-157209/droneapiserver:$SHORT_SHA']
  env:
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1' 
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west3-b'

