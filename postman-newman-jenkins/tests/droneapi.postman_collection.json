{
	"variables": [],
	"info": {
		"name": "DroneAPI Examples",
		"_postman_id": "63ca6788-2cbd-fd94-6a83-db2be8d62f64",
		"description": "Example API calls for DroneAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "http://droneapi.ddns.net:1235",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;"
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}",
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {},
				"description": "GET homepage (EntryPoint) of DroneAPI"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Successful POST request\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Returned droneId\"] = jsonData.id;",
							"postman.setEnvironmentVariable(\"droneId\", jsonData.id);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle",
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"test\",\"vehicle_type\":\"simulated\",\"lat\":51.4,\"lon\":-1.3432,\"alt\":105}"
				},
				"description": "Add a new simulated drone"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"Body contains vehicle\"] = responseBody.has(\"vehicle\");",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");"
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle",
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"test\",\"vehicleType\":\"simulated\"}"
				},
				"description": "Return the collection of available vehicles"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle/{{droneId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"if (!jsonData.vehicle_status){",
							"    tests[\"Vehicle starting up\"] = true;",
							"    ",
							"    postman.setNextRequest(\"http://droneapi.ddns.net:1235/vehicle\"); //if vehicle starting up then re-try",
							"} else {",
							"    if (jsonData.vehicle_status.is_armable){",
							"        tests[\"Status code is 200\"] = responseCode.code === 200;",
							"        tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"        tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"        tests[\"battery value returned with voltage > 10\"] = (jsonData.vehicle_status.battery.voltage>10);",
							"        tests[\"groundspeed value returned \"] = (jsonData.vehicle_status.groundspeed);",
							"        tests[\"is_armable value returned \"] = (jsonData.vehicle_status.is_armable);",
							"        tests[\"attitude value returned \"] = (jsonData.vehicle_status.attitude);",
							"        tests[\"last_heartbeat value returned < 2s \"] = (jsonData.vehicle_status.last_heartbeat<2);",
							"        tests[\"vehicleType value returned \"] = (jsonData.vehicle_details.vehicle_type);",
							"        tests[\"id value returned \"] = (jsonData.id=postman.getEnvironmentVariable(\"droneId\"));",
							"        tests[\"version value returned \"] = (jsonData.vehicle_status.version);",
							"        tests[\"gps_0 value returned \"] = (jsonData.vehicle_status.gps_0);",
							"        tests[\"gimbal value returned \"] = (jsonData.vehicle_status.gimbal);",
							"        tests[\"ekf_ok value returned true \"] = (jsonData.vehicle_status.ekf_ok===true);",
							"        tests[\"global_frame value returned \"] = (jsonData.vehicle_status.global_frame);",
							"        tests[\"system_status value returned \"] = (jsonData.vehicle_status.system_status);",
							"        tests[\"mode value returned \"] = (jsonData.vehicle_status.mode);",
							"        tests[\"local_frame value returned \"] = (jsonData.vehicle_status.local_frame);",
							"        tests[\"velocity value returned \"] = (jsonData.vehicle_status.velocity);",
							"        tests[\"_actions value returned \"] = (jsonData._actions);",
							"    } else {",
							"        tests[\"Drone not armable\"] = (true);",
							"            postman.setNextRequest(\"http://droneapi.ddns.net:1235/vehicle\"); //if vehicle not armed yet then retry",
							"    }",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}",
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {},
				"description": "GET status for vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle/{{droneId}}/command",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"if (jsonData.error){",
							"    tests[\"Vehicle starting up\"] = jsonData.error === \"Cant connect to vehicle - vehicle starting up \";",
							"} else {",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"_actions value returned \"] = (jsonData._actions);",
							"tests[\"commands value returned \"] = (jsonData.commands);",
							"}"
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/command",
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {},
				"description": "GET actions for vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle/{{droneId}}/mission",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"items value returned \"] = (jsonData.items);",
							"tests[\"_actions value returned \"] = (jsonData._actions);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/mission",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n[{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.4157, -1.3196, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":20,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0}]\r\n"
				},
				"description": "Get current mission for drone 7147a58f"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle/{{droneId}}/simulator",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"_actions value returned \"] = (jsonData._actions);",
							"tests[\"simulatorParams value returned \"] = (jsonData.simulatorParams);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/simulator",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n[{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.4157, -1.3196, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":20,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0}]\r\n"
				},
				"description": "Get simulator parameters for drone 7147a58f"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle/{{droneId}}/mission",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"items value returned \"] = (jsonData.items);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/mission",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\"mission_items\":[{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.4157, -1.3196, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":20,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0}]}\r\n"
				},
				"description": "Upload a new misison (fly Vodafone Technology HQ to Vodafone Newbury Campus and back)."
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle/{{droneId}}/command - Arm",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"command value returned \"] = (jsonData.command);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/command",
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Arm\"}"
				},
				"description": "POST actions 'Takeoff to a height of 20m' to vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle/{{droneId}}/command - Takeoff",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"command value returned \"] = (jsonData.command);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/command",
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Takeoff\"}"
				},
				"description": "POST actions 'Takeoff to a height of 20m' to vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle/{{droneId}}/command - Start-Mission",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"command value returned \"] = (jsonData.command);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/command",
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Start-Mission\"}"
				},
				"description": "POST actions 'Takeoff to a height of 20m' to vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/vehicle/{{droneId}}/simulator",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"simulatorParams value returned \"] = (jsonData.simulatorParams);",
							"tests[\"simulatorParams SIM_GPS_NUMSATS is 9 \"] = (jsonData.simulatorParams.SIM_GPS_NUMSATS===9);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/simulator",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"parameter\":\"SIM_GPS_NUMSATS\",\"value\":9}"
				},
				"description": "POST new parameter SIM_GPS_NUMSATS=4 for drone 7147a58f"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle?status=true",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 10000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Body contains vehicle\"] = responseBody.has(\"vehicle\");",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Drone Array has at least one Drone\"] = jsonData._embedded.vehicle.length>0;",
							"tests[\"Drone Array has vehicle_status\"] = jsonData._embedded.vehicle[0].vehicle_status",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{url}}/vehicle?status=true",
					"protocol": "http",
					"host": [
						"{{url}}"
					],
					"path": [
						"vehicle"
					],
					"query": [
						{
							"key": "status",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"test\",\"vehicleType\":\"simulated\"}"
				},
				"description": "Return the collection of available vehicles"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/vehicle/{{droneId}}/homeLocation",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"home_location value returned \"] = (jsonData.home_location);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}/homeLocation",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n[{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.4157, -1.3196, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":16,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0},\r\n{\"coordinate\":[51.405, -1.305, 30], \"command\":20,\"param1\":0,\"param2\":0,\"param3\":0,\"param4\":0}]\r\n"
				},
				"description": "Get home location for drone 7147a58f"
			},
			"response": []
		},
		{
			"name": "DEL-http://droneapi.ddns.net:1235/vehicle/{{droneId}}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 30s\"] = responseTime < 30000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Valid JSON data returned\"] = jsonData",
							"tests[\"status value returned \"] = (jsonData.status);",
							"if (jsonData.status){",
							"    tests[\"Vehicle deleted\"] = jsonData.status === \"success\";",
							"} ",
							"postman.setEnvironmentVariable(\"droneId\", \"No Drone\");",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/vehicle/{{droneId}}",
				"method": "DELETE",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {},
				"description": "GET status for vehicle 7147a58f"
			},
			"response": []
		},
		{
			"name": "http://droneapi.ddns.net:1235/admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Self link returned\"] = jsonData._links.self.href === request.url;",
							"tests[\"Body contains _actions\"] = responseBody.has(\"_actions\");",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/admin",
				"method": "GET",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"test\",\"vehicleType\":\"simulated\"}"
				},
				"description": "Return the collection of Admin functions available"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"status success returned \"] = (jsonData.status===\"success\");",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/admin",
				"method": "POST",
				"header": [
					{
						"key": "api_key",
						"value": "{{api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Rebuild dockerHostsArray\"}"
				},
				"description": "POST an Admin function"
			},
			"response": []
		},
		{
			"name": "POST-http://droneapi.ddns.net:1235/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is less than 2s\"] = responseTime < 2000;",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"api_key returned \"] = (jsonData.api_key);",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{url}}/user",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Lester Thomas\",\"email\":\"lesterthomas@hotmail.com\",\"id\":\"10211950448669833\",\"id_provider\":\"Facebook\"}"
				},
				"description": "POST a new user"
			},
			"response": []
		}
	]
}